import os
from datetime import date
from datetime import timedelta
import random


name = input('Введите ФИО пациента: ')
date_of_birth = input(str('Введите дату рождения: '))
age = input(str('ведите возраст пациента: '))
date_of_chek_in = (date.today()).strftime("%d.%m.%Y")
time_of_chek_in = input('Введите время поступления: ')
diagnosis = input('Введите диагноз: ')
sop_diagnosis = input('Введите сопутствующие заболевания, перенесенные операции: ')
allergis = input('Введите аллергологический анамнез: ')
ln = input('Листок нетрудоспособности: (не нужен/первичный с/на руках с): ')
date_of_chek_out = input('Введите дату выписки (в формате: число.месяц.год): ')

path = f'C:\\Истории болезни/{name}_{date_of_chek_in}'
os.mkdir(path)


# Функция для записи базовых переменных
def patient_data_file():
    file = open(f'{path}/Данные пациента_{name}_{date_of_chek_in}.py', 'w')
    file.write(
        f'name = {name} \n'
        f'date_of_birth = {date_of_birth} \n'
        f'age = {age}\n'
        f'date_of_chek_in = {date_of_chek_in}\n'
        f'time_of_chek_in = {time_of_chek_in}\n'
        f'diagnosis = {diagnosis}\n'
        f'sop_diagnosis = {sop_diagnosis}\n'
        f'ln =  {ln} \n'
        f'date_of_chek_out = {date_of_chek_out} \n')
    file.close()


patient_data_file()


# Приемный статус

def zapolnit_status():
    pulse = random.randrange(65, 83)
    breath = random.randrange(13, 18)
    ad1 = random.randrange(110, 131, 5)
    ad2 = random.randrange(75, 86, 5)
    priemnyj_status = open(f'{path}/Приемный_статус_{name}_{date.today().strftime("%d.%m.%Y")}.txt', 'w')
    priemnyj_status.write(
        f'ПРИЕМНЫЙ СТАТУС\n'
        f'{date_of_chek_in} время:{time_of_chek_in}\n'
        f'ЖАЛОБЫ: на  выпадение геморроидальных узлов при дефекации,\n'
        f'алую кровь в стуле во время и после дефекации.\n'
        f'АНАМНЕЗ ЗАБОЛЕВАНИЯ: Болеет в течение длительного времени с периодическими обострениями,\n'
        f'консервативное лечение без эффекта. Кровотечения при дефекации усиливались.\n'
        f'После консультации проктолога поликлиники НОКБ - рекомендовано оперативное лечение.\n'
        f'Обследование пройдено по месту жительства. Госпитализация для планового оперативного лечения.\n'
        f'АНАМНЕЗ ЖИЗНИ:\n'
        f'Перенесенные заболевания: Просудные. \n'
        f'{sop_diagnosis}\n'
        f'Употребление наркотиков: нет. Курение: нет. Употребление алкоголя: редко.\n'
        f'Аллергия: {allergis}\n'
        f'Страховой анамнез: больничный лист {ln}.\n'
        f'\n'
        f'Состояние удовлетворительное.\n'
        f'Кожный покров чистый, обычной окраски. Отеков нет.\n'
        f'Телосложение нормостенического типа.\n'
        f'Пульс {pulse} в минуту, ритмичный, удовлетворительного наполнения. \n'
        f'АД = {ad1}/{ad2} мм рт.ст.\n'
        f'Тоны серца ясные, ритмичные, шумов не выслушивается.\n'
        f'В легких: хрипов нет, дыхание везикулярное проводится во все отделы легких, ЧДД = {breath}.\n'
        f'Живот мягкий безболезненный, не вздут, перитонеальных симптомов нет.\n'
        f'Печень в пределах рёберной дуги, край печени не пальпируется.\n'
        f'Селезенка не увеличена, не пальпируется.\n'
        f'Синдром поколачивания отрицательный с обеих сторон.\n'
        f'Щитовидная железа визуально и пальпаторно не увеличена.\n'
        f'Стул, диурез в норме.\n'
        f'\n'
        f'ЛОКАЛЬНЫЙ СТАТУС: Перианальная область не изменена, сфинктр в нормотонусе,\n'
        f'на 3, 7, 11 часах увеличенные геморроидальные узлы с выраженным наружным компонентом.\n'
        f'При аноскопии выраженные внутренние узлы на 3, 7, 11 часах с эррозиями.\n'
        f'\n'
        f'ОБОСНОВАНИЕ ДИАГНОЗА: На основании жалоб: на кровь в стуле, выпадение геморроидальных\n'
        f'узлов при дефекации, на основании данных осмотра - наличе геморроидальных узлов в\n'
        f'анальном канале, отсутсвии другой патологии прямой кишки при эндоскпическом\n'
        f'обслдедовании - установлен следующий диагноз:\n'
        f'КЛИНИЧЕСКИЙ ДИАГНОЗ: {diagnosis}.\n'
        f'\n'
        f'ПЛАН ЛЕЧЕНИЯ: Плановая операция - геморроидэктомия Миллигана-Моргана в модификации ГНЦК.\n'
        f'Анальгетики: Кетарол 1 т. 2 раза в день. \n'
        f'Перевязки с мазью левосин 2 раза в день, ванночки с отваром ромашки 2 р в день\n'
        f'Лечащий врач: Орлов В.И.                  Заведующий отделением:\n'
        f'\n\n'
        f'ПРЕДОПЕРАЦИОННЫЙ ЭПИКРИЗ\n'
        f'На операцию подготовлен пациент: {name} {date_of_birth}\n'
        f'Диагноз: {diagnosis}\n'
        f'Данная патология является показнием к оперативному лечению.\n'
        f'Планируется, в условиях анестезии, выполнение геморроидэтомии Миллигана-Моргана\n'
        f'в модификации ГНЦК.\n'
        f'Абсолютный противопоказаний для оперативного лечения не выявлено.\n'
        f'Согласие на операцию получено.\n'
        f'Лечащий врач: Орлов В.И.                  Заведующий отделением:\n'
    )
    priemnyj_status.close()


# zapolnit_status()

# Функция для дневников

# первые один или два дневника


def write_first_dnevnik1():
    pulse = random.randrange(65, 83)
    breath = random.randrange(13, 18)
    ad1 = random.randrange(110, 131, 5)
    ad2 = random.randrange(75, 86, 5)
    first_dnevnik = open(f'{path}/Первый дневник {name}.txt', 'w')
    first_dnevnik.write(
        f'{(date.today() + timedelta(days=1)).strftime("%d.%m.%Y")}\n'
        f'ОБХОД С ЗАВЕДУЮЩИМ ОТДЕЛЕНИЕМ.\n'
        f'Осмотр перед операцией. Состояние удовлетворительное.\n'
        f'Жалоб не предъявляет.\n'
        f'Кожный покров чистый, обычной окраски.\n'
        f'Пульс {pulse} в минуту, ритмичный. АД = {ad1}/{ad2} мм рт.ст.\n'
        f'В легких: хрипов нет, дыхание проводится во все отделы легких, ЧДД = {breath}.\n'
        f'Живот мягкий безболезненный, не вздут, перитонеальных симптомов нет.\n'
        f'Стул, диурез в норме.\n'
        f'Диагноз: {diagnosis}\n'
        f'Проведена подготовка к оперативному лечению.\n'
        f'врач: Орлов В.И.\n'
        f'\n \n'
    )
    first_dnevnik.close()


# write_first_dnevnik1()

# if ((date.today()).strftime('%a')) == 'Fri':


def write_first_dnevnik2():
    pulse = random.randrange(65, 83)
    breath = random.randrange(13, 18)
    ad1 = random.randrange(110, 131, 5)
    ad2 = random.randrange(75, 86, 5)
    first_dnevnik = open(f'Первый дневник {name}.txt', 'w')
    first_dnevnik.write(
        f'{(date.today() + timedelta(days=1)).strftime("%d.%m.%Y")}\n'
        f'ОБХОД С ЗАВЕДУЮЩИМ ОТДЕЛЕНИЕМ.\n'
        f'Состояние удовлетворительное.\n'
        f'Жалоб не предъявляет.\n'
        f'Кожный покров чистый, обычной окраски.\n'
        f'Пульс {pulse} в минуту, ритмичный. АД = {ad1}/{ad2} мм рт.ст.\n'
        f'В легких: хрипов нет, дыхание проводится во все отделы легких, ЧДД = {breath}.\n'
        f'Живот мягкий безболезненный, не вздут, перитонеальных симптомов нет.\n'
        f'Стул, диурез в норме.\n'
        f'Диагноз: {diagnosis}\n'
        f'Планируется оперативное лечение.\n'
        f'врач: Орлов В.И.\n'
        f'\n \n'
        f'{(date.today() + timedelta(days=3)).strftime("%d.%m.%Y")}\n'
        f'ЛЕЧАЩИЙ ВРАЧ.\n'
        f'Осмотр перед операцией. Состояние удовлетворительное.\n'
        f'Жалоб не предъявляет.\n'
        f'Кожный покров чистый, обычной окраски.\n'
        f'Пульс {pulse} в минуту, ритмичный. АД = {ad1}/{ad2} мм рт.ст.\n'
        f'В легких: хрипов нет, дыхание проводится во все отделы легких, ЧДД = {breath}.\n'
        f'Живот мягкий безболезненный, не вздут, перитонеальных симптомов нет.\n'
        f'Стул, диурез в норме.\n'
        f'Диагноз: {diagnosis}\n'
        f'Проведена подготовка к оперативному лечению.\n'
        f'врач: Орлов В.И.\n'
        f'\n \n'
    )
    first_dnevnik.close()
    # write_first_dnevnik2()


# write_first_dnevnik2()
# написать все дневники сразу


def write_dayly_journal():
    dayly_journal = open(f'{path}/Дневники {name}.txt', 'w')
    x = 2
    while x < 15:

        day = (date.today() + timedelta(days=x)).strftime("%d.%m.%Y")
        if (date.today() + timedelta(days=x)).strftime("%d.%m.%Y") == date_of_chek_out:
            def write_last_obhod():  # последний дневник
                doctor = 'ОБХОД С ЗАВЕДУЮЩИМ ОТДЕЛЕНИЕМ.'
                pulse = random.randrange(65, 85)
                breath = random.randrange(12, 18)
                ad1 = random.randrange(110, 131, 5)
                ad2 = random.randrange(75, 86, 5)

                dayly_journal.write(
                    f'{date_of_chek_out}\n'
                    f'{doctor}\n'
                    f'Состояние удовлетворительное.\n'
                    f'Жалобы на боли в области послеоперационных ран.\n'
                    f'Кожный покров чистый, обычной окраски.\n'
                    f'Пульс {pulse} в минуту, ритмичный. АД = {ad1}/{ad2} мм рт.ст.\n'
                    f'В легких: хрипов нет, дыхание проводится во все отделы легких, ЧДД = {breath}.\n'
                    f'Живот мягкий безболезненный, не вздут, перитонеальных симптомов нет.\n'
                    f'Стул, диурез в норме.\n'
                    f'Послеоперационные раны с умеренным количеством серозного отделяемого,\n'
                    f'без признаков воспаления.'
                    f'Перевязка с мазью левосин.\n'
                    f'Диагноз: {diagnosis}\n'
                    f'Течение послеоперационного периода удовлеторительное.\n'
                    f'К выписке. Даны рекомендации по режиму, питанию, уходу за ранами.\n'
                    f'врач: Орлов В.И.\n'
                    f'\n \n '
                )

            write_last_obhod()
            break

        elif (x == 4) or (x == 7) or (x == 10) or (x == 14):
            def write_obhod(day):  # обход с зав отделением
                doctor = 'ОБХОД С ЗАВЕДУЮЩИМ ОТДЕЛЕНИЕМ.'
                pulse = random.randrange(65, 85)
                breath = random.randrange(12, 18)
                ad1 = random.randrange(110, 131, 5)
                ad2 = random.randrange(75, 86, 5)

                dayly_journal.write(
                    f'{day}\n'
                    f'{doctor}\n'
                    f'Состояние удовлетворительное.\n'
                    f'Жалобы на боли в области послеоперационных ран.\n'
                    f'Кожный покров чистый, обычной окраски.\n'
                    f'Пульс {pulse} в минуту, ритмичный. АД = {ad1}/{ad2} мм рт.ст.\n'
                    f'В легких: хрипов нет, дыхание проводится во все отделы легких, ЧДД = {breath}.\n'
                    f'Живот мягкий безболезненный, не вздут, перитонеальных симптомов нет.\n'
                    f'Стул, диурез в норме.\n'
                    f'Послеоперационные раны с умеренным количеством серозного отделяемого,\n'
                    f'без признаков воспаления.'
                    f'Перевязка с мазью левосин.\n'
                    f'Диагноз: {diagnosis}\n'
                    f'Течение послеоперационного периода удовлеторительное.\n'
                    f'Лечение получает, дополнений к лечению нет. Преносит лечение удовлетворительно\n'
                    f'врач: Орлов В.И.\n'
                    f'\n \n'
                )

            write_obhod(day)
            x += 1

        else:
            def write_dnevnik(day):  # дневник лечащего врача
                doctor = 'ЛЕЧАЩИЙ ВРАЧ.'
                pulse = random.randrange(65, 85)
                breath = random.randrange(12, 18)
                ad1 = random.randrange(110, 131, 5)
                ad2 = random.randrange(75, 86, 5)

                dayly_journal.write(
                    f'{day}\n'
                    f'{doctor}\n'
                    f'Состояние удовлетворительное.\n'
                    f'Жалобы на боли в области послеоперационных ран.\n'
                    f'Кожный покров чистый, обычной окраски.\n'
                    f'Пульс {pulse} в минуту, ритмичный. АД = {ad1}/{ad2} мм рт.ст.\n'
                    f'В легких: хрипов нет, дыхание проводится во все отделы легких, ЧДД = {breath}.\n'
                    f'Живот мягкий безболезненный, не вздут, перитонеальных симптомов нет.\n'
                    f'Стул, диурез в норме.\n'
                    f'Послеоперационные раны с умеренным количеством серозного отделяемого,\n'
                    f'без признаков воспаления.'
                    f'Перевязка с мазью левосин.\n'
                    f'Диагноз: {diagnosis}\n'
                    f'Течение послеоперационного периода удовлеторительное.\n'
                    f'Лечение получает, дополнений к лечению нет. Преносит лечение удовлетворительно\n'
                    f'врач: Орлов В.И.\n'
                    f'\n \n'
                )

            write_dnevnik(day)

            x += 1
    dayly_journal.close()


# вызов функции для всех дневников
# write_dayly_journal()

def operation():
    day = (date.today())
    nomer_istoryiy = input('Введите номер истории болезни: ')
    vremiya_operacyi = input('Введите время операции: ')
    narkoz = input('Введите метод наркоза: ')
    anesteziolog = input('Введите имя анестезиолога: ')
    hirurg = input('Введите имя хирурга: ')
    asistent = input('Введите имя асистена: ')
    op_sister = input('Введите имя операционной сестры: ')
    uzli = format((random.uniform(1.2, 2.9)), '.1f')
    diagnosis_po = input('Введите диагноз: ')
    doctor = 'ЛЕЧАЩИЙ ВРАЧ. ОСМОТР ПОСЛЕ ОПЕРАЦИИ'
    vremiya_posle_operacyi = input('Введите время осмотра после операции: ')
    pulse = random.randrange(65, 85)
    breath = random.randrange(12, 18)
    ad1 = random.randrange(110, 131, 5)
    ad2 = random.randrange(75, 86, 5)
    protokol_operation = open(f'{path}/Геморроидэктомия {name}.txt', 'w')
    protokol_operation.write(
        f'{day.strftime("%d.%m.%Y")} Время операции: {vremiya_operacyi}\n'
        f'ПРОТОКОЛ ОПЕРАЦИИ Геморродидэктомия Миллигана-Моргана.\n'
        f'Пациент: {name} {date_of_birth}  № и/б {nomer_istoryiy}\n'
        f'Метод обезболивания: {narkoz}    Анестезиолог: {anesteziolog}  \n'
        f'Хирург: {hirurg}  Ассистент: {asistent}  Операционная сестра: {op_sister}\n'
        f'\n'
        f'Под {narkoz} обработка операционного поля йодпироном трехкратно,\n'
        f'ограничение стерильным бельем.'
        f'Девульсия анус ректальным зеркалом.\n'
        f'На 3,7,11 часах визуализируются наружные и выпавшие внутренние геморроидальные узлы\n'
        f'размером до {uzli} см.\n'
        f'"Семичасовой" узел захвачен зажимом типа Алис, иссечен полулунным разрезом снаружи внутрь\n'
        f'до сосудистой ножки. На сосудистую ножку геморроидального узла наложен зажим,\n'
        f'ножка прошита и перевязана кеткутом №1. Частичное ушивание слизистой анального канала.\n'
        f'Узлы на 3 и 11 часах иссечены аналогичным образом с оставлением \n'
        f'мостиков слизистой более 1 см.\n'
        f'Анальный канал свободно проходим. Обработка перекисью водорода.\n'
        f'Гемостаз - удовлетворительный. Гемостатическая губка в анальный канал. Йод, \n'
        f'повязка с мазью левосин.\n'
        f'Препарат: геморроидальные узлы.\n'
        f'Кровопотеря: 10-20 мл\n'
        f'Диагноз: {diagnosis_po}\n'
        f'\n'
        f'Врач: Орлов В.И.\n'
        f'\n\n'
        f'{day.strftime("%d.%m.%Y")}\n'
        f'Время: {vremiya_posle_operacyi}'
        f'{doctor}\n'
        f'Состояние удовлетворительное.\n'
        f'Жалобы на боли в области послеоперационных ран.\n'
        f'Кожный покров чистый, обычной окраски.\n'
        f'Пульс {pulse} в минуту, ритмичный. АД = {ad1}/{ad2} мм рт.ст.\n'
        f'В легких: хрипов нет, дыхание проводится во все отделы легких, ЧДД = {breath}.\n'
        f'Живот мягкий безболезненный, не вздут, перитонеальных симптомов нет.\n'
        f'Стул, диурез в норме.\n'
        f'Послеоперационные раны с умеренным количеством геморрагического отделяемого.\n'
        f'Течение раннего послеоперационного периода удовлеторительное.\n'
        f'Лечение получает, дополнений к лечению нет.\n'
        f'врач: Орлов В.И.\n'
        f'\n \n'
    )
    protokol_operation.close()


# operation()

# базовый GUI
print(f'Выберите необходимую операцию: \n'
      f'"1" - приемный статус\n'
      f'"2" - протокол операции\n'
      f'"3" - дневник перед операцией (один день)\n'
      f'"4" - дневник перед операцией (два дня)\n'
      f'"5" - все дневники после операции\n'
      f'"6" - выход\n')

while True:
    to_do = input('Выберите номер необходимого действия: ')
    if '1' in to_do:
        zapolnit_status()
    elif '2' in to_do:
        operation()
    elif '3' in to_do:
        write_first_dnevnik1()
    elif '4' in to_do:
        write_first_dnevnik2()
    elif '5' in to_do:
        write_dayly_journal()
    elif '6' in to_do:
        exit()
    else:
        print('нет такого действия, введите правильный номер')
